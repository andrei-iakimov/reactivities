[{"C:\\Projects\\Core\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Projects\\Core\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"3","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"5","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"6","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"7","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx":"8","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx":"9","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx":"10","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"11","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"12","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"13","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"14","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"15","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"16","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"17","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"18","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"19","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"20","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"21","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"22","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"23","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetaledHeader.tsx":"24","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"25","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"26","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"27","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"28","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"29","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx":"30","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"31","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"32","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"33","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\LoginMaterial.tsx":"34","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx":"35"},{"size":1008,"mtime":1634411311173,"results":"36","hashOfConfig":"37"},{"size":440,"mtime":1634411311174,"results":"38","hashOfConfig":"37"},{"size":668,"mtime":1634673454095,"results":"39","hashOfConfig":"37"},{"size":2407,"mtime":1634673687384,"results":"40","hashOfConfig":"37"},{"size":928,"mtime":1634672725267,"results":"41","hashOfConfig":"37"},{"size":1580,"mtime":1634671824664,"results":"42","hashOfConfig":"37"},{"size":4136,"mtime":1634411311165,"results":"43","hashOfConfig":"37"},{"size":610,"mtime":1634411311171,"results":"44","hashOfConfig":"37"},{"size":784,"mtime":1634411311172,"results":"45","hashOfConfig":"37"},{"size":2021,"mtime":1634411311172,"results":"46","hashOfConfig":"37"},{"size":1766,"mtime":1634687202015,"results":"47","hashOfConfig":"37"},{"size":996,"mtime":1634411311167,"results":"48","hashOfConfig":"37"},{"size":1341,"mtime":1634411311170,"results":"49","hashOfConfig":"37"},{"size":4184,"mtime":1634411311171,"results":"50","hashOfConfig":"37"},{"size":2902,"mtime":1634673119878,"results":"51","hashOfConfig":"37"},{"size":514,"mtime":1634687456362,"results":"52","hashOfConfig":"37"},{"size":384,"mtime":1634411311163,"results":"53","hashOfConfig":"37"},{"size":857,"mtime":1634411311167,"results":"54","hashOfConfig":"37"},{"size":608,"mtime":1634411311167,"results":"55","hashOfConfig":"37"},{"size":1770,"mtime":1634411311169,"results":"56","hashOfConfig":"37"},{"size":2409,"mtime":1634411311168,"results":"57","hashOfConfig":"37"},{"size":2436,"mtime":1634411311169,"results":"58","hashOfConfig":"37"},{"size":267,"mtime":1634411311162,"results":"59","hashOfConfig":"37"},{"size":2049,"mtime":1634411311170,"results":"60","hashOfConfig":"37"},{"size":790,"mtime":1634411311160,"results":"61","hashOfConfig":"37"},{"size":945,"mtime":1634411311161,"results":"62","hashOfConfig":"37"},{"size":652,"mtime":1634411311161,"results":"63","hashOfConfig":"37"},{"size":651,"mtime":1634669956195,"results":"64","hashOfConfig":"37"},{"size":1697,"mtime":1634411311168,"results":"65","hashOfConfig":"37"},{"size":1353,"mtime":1634686830092,"results":"66","hashOfConfig":"37"},{"size":1586,"mtime":1634686927983,"results":"67","hashOfConfig":"37"},{"size":512,"mtime":1634673427982,"results":"68","hashOfConfig":"37"},{"size":489,"mtime":1634673652269,"results":"69","hashOfConfig":"37"},{"size":4242,"mtime":1634681290050,"results":"70","hashOfConfig":"37"},{"size":1897,"mtime":1634687942282,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1jhqc89",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},"C:\\Projects\\Core\\Reactivities\\client-app\\src\\index.tsx",[],["148","149"],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["150"],"import React, { useEffect } from 'react';\r\nimport { Container, ModalContent } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport TestErrors from '../../features/errors/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport LoginForm from '../../features/users/LoginForm';\r\nimport { useStore } from '../stores/store';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const {commonStore, userStore} = useStore();\r\n\r\n  useEffect( () => {\r\n    if(commonStore.token){\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded())\r\n    } else{\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...'></LoadingComponent>\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <Route exact path='/activities' component={ActivityDashboard} />\r\n                <Route path='/activities/:id' component={ActivityDetails} />\r\n                <Route key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\r\n                <Route path='/errors' component={TestErrors} />\r\n                <Route path='/server-error' component={ServerError} />\r\n                <Route path='/login' component={LoginForm} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",["151"],"import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport SignInFrom from '../users/LoginMaterial';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>        \r\n                    </>\r\n                    \r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register     \r\n                        </Button>\r\n                    </>\r\n                    \r\n                )}\r\n                \r\n                \r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx",["152"],"import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: string[] | null;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: any) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i : any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetaledHeader.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],["153","154"],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\LoginMaterial.tsx",["155"],"C:\\Projects\\Core\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx",["156"],"import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm(){\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik \r\n        initialValues = {{email: '', password: '', displayName: '', userName: '', error:null}} \r\n        onSubmit={(values, {setErrors}) => userStore.register(values).catch(error =>setErrors({error}))}\r\n        validationSchema ={yup.object({\r\n            displayName: yup.string().required(),\r\n            username: yup.string().required(),\r\n            email: yup.string().required().email(),\r\n            password: yup.string().required(),\r\n\r\n        })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content = \"Sign up to Reelcruit\" color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render = {()=> <ValidationErrors errors={errors.error} />} />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Sign Up' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":2,"column":21,"nodeType":"163","messageId":"164","endLine":2,"endColumn":33},{"ruleId":"161","severity":1,"message":"165","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":18},{"ruleId":"161","severity":1,"message":"166","line":4,"column":11,"nodeType":"163","messageId":"164","endLine":4,"endColumn":16},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"161","severity":1,"message":"169","line":17,"column":10,"nodeType":"163","messageId":"164","endLine":17,"endColumn":24},{"ruleId":"161","severity":1,"message":"170","line":4,"column":26,"nodeType":"163","messageId":"164","endLine":4,"endColumn":31},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'ModalContent' is defined but never used.","Identifier","unusedVar","'SignInFrom' is defined but never used.","'Props' is defined but never used.",["171"],["172"],"'UserFormValues' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]